# Common rule for web nodes.
#
# Notes:
# - Tasks marked with tag 'auto' are executed automatically by schedule, others - on demand
- name: Create directory structure for Filebeat
  win_file:
    path: D:\Beats\
    state: directory

- name: Obtain information about a folder
  win_stat:
    path: '{{ filebeat_root }}'
  register: folder_stat

- name: Download Filebeat
  win_get_url:
    url: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-{{ filebeat_version }}-windows-x86_64.zip
    dest: D:\Beats\filebeat-{{ filebeat_version }}-windows-x86_64.zip
    force: no

- name: Unzip Filebeat
  win_unzip:
    src: D:\Beats\filebeat-{{ filebeat_version }}-windows-x86_64.zip
    dest: D:\Beats\
    #delete_archive: yes
  when: folder_stat.stat.exists == False

- name: rename the filebeat
  win_command: "cmd.exe /c rename D:\\Beats\\filebeat-{{ filebeat_version }}-windows-x86_64 filebeat"
  when: folder_stat.stat.exists == False

- name: Create directory data, logs
  win_file:
    path: D:\Beats\filebeat\{{ item }}
    state: directory
  with_items:
    - 'data'
    - 'logs'

- name: Change line workdir folder in instal script
  win_lineinfile:
     path: '{{ filebeat_root }}\install-service-filebeat.ps1'
     regexp: '^(.*")C:\\ProgramData\\filebeat(.*)C:\\ProgramData\\filebeat(.*)$'
     backrefs: yes
     line: '$1$workdir\data$2$workdir$3'

- name: Execute installation script
  win_shell: D:\Beats\filebeat\install-service-filebeat.ps1 >> D:\Beats\filebeat\install.log

- name: Copy template filebeat.yml
  win_template:
    src: 'templates/{{ filebeat_service_name }}.yml.j2'
    dest: '{{ filebeat_root }}\filebeat.yml'


- name: Check if a filebeat is installed
  win_service:
    name: filebeat
  register: service_stat

- name: Start filebeat a service
  win_service:
    name: filebeat
    state: start
  when: service_stat.stat.exists == True